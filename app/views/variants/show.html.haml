= content_for :page_specific_javascript do
  = javascript_include_tag "pages/variants/show"


%h1= @variant.name
.desc= @variant.description



%h3 Options

- if signed_in? && current_user.can_manage?(@variant)
  = link_to 'Edit', [:edit, @variant]

%table
  %tr
    %th Board
    %td
      = @variant.board
      = link_to 'Preview', "#", { "data-action" => "preview", "data-id" => @variant.id }
  %tr
    %th Number of Pieces
    %td= @variant.number_of_pieces



%h3 Pieces

- if signed_in? && current_user.can_manage?(@variant)
  = link_to 'Add Piece Rule', [:new, @variant, :piece_rule]

%table
  %tr
    %th Piece Type
    %th Count
    %th Movement

  - @variant.piece_rules.each do |piece_rule|
    %tr
      %td= piece_rule.piece_type.name
      %td= piece_rule.count
      %td= piece_rule.movement

      %td
        - if signed_in? && current_user.can_manage?(@variant)
          = link_to 'Edit', [:edit, piece_rule]
          - unless piece_rule.piece_type.king?
            = link_to 'Delete', piece_rule, method: :delete, data: { confirm: 'Are you sure?' }

        = link_to 'Preview', "#", { "data-action" => "preview", "data-id" => @variant.id, "data-piece-type-id" => piece_rule.piece_type_id }

%br
%br



%h3 Terrain

- if signed_in? && current_user.can_manage?(@variant)
  = link_to 'Add Terrain Rule', [:new, @variant, :terrain_rule]

%table
  %tr
    %th Terrain Type
    %th Count
    %th Block Movement

  - @variant.terrain_rules.each do |terrain_rule|
    %tr
      %td= terrain_rule.terrain_type.name
      %td= terrain_rule.count
      %td= terrain_rule.block_movement ? 'Yes' : 'No'

      - if signed_in? && current_user.can_manage?(@variant)
        %td
          = link_to 'Edit', [:edit, terrain_rule]
          = link_to 'Delete', terrain_rule, method: :delete, data: { confirm: 'Are you sure?' }


%br
%br



= link_to 'Back to Variants', :variants

#preview.modal.hide
  .modal-header
    %button.close(type='button' data-dismiss='modal') Ã—
    %h3 Preview
  .modal-body
    .board

:javascript
  $(function() {
    PieceType = require('piece_type')
    PieceType.set_data(#{ActiveSupport::JSON.encode(PieceType.urls)})

    TerrainType = require('terrain_type')
    TerrainType.set_data(#{ActiveSupport::JSON.encode(TerrainType.urls)})
  });
